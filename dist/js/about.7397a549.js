(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["about"],{"1c4c":function(t,e,c){"use strict";c.r(e);var o=c("7a23"),a=c("1c6f"),r=c.n(a),h=c("6a4c"),s=c.n(h),l=c("c723"),n=c.n(l),d=c("215e"),i=c.n(d),b=c("c44f"),p=c.n(b),f=c("d7d2"),u=c.n(f),m=c("6d69"),g=c.n(m),O=c("281b"),j=c.n(O),w=c("1fbc"),k=c.n(w),v={class:"creations"},y={class:"container d-flex align-items-start flex-column"},_=Object(o["f"])("h1",null,"Creations",-1),x=Object(o["f"])("p",null," bridge. has been used to create various awesome projects. Here are some of our favorites... ",-1),S={class:"container d-flex align-items-center row"},N={class:"m-1"},T=Object(o["f"])("img",{class:"card-img-top",src:r.a,alt:""},null,-1),C=Object(o["f"])("div",{class:"card-body text-white"},[Object(o["f"])("h5",{class:"card-title text-white"},"The Little Things"),Object(o["f"])("div",{class:"row"},[Object(o["f"])("img",{class:"",src:s.a,width:"40",height:"40"}),Object(o["f"])("div",{class:"col"},[Object(o["f"])("p",{class:"small"},[Object(o["f"])("strong",null,"The SyKo Network"),Object(o["f"])("br"),Object(o["e"])(" Content Creator ")])])]),Object(o["f"])("p",{class:"card-text small"}," The Little Thins addon adds over 100 recipes to uncraft those little mistakes when you just happen to craft a few to many items! ")],-1),I={class:"m-1"},D=Object(o["f"])("img",{class:"card-img-top",src:n.a,alt:""},null,-1),J=Object(o["f"])("div",{class:"card-body text-white"},[Object(o["f"])("h5",{class:"card-title text-white"},"Ender Elevators"),Object(o["f"])("div",{class:"row"},[Object(o["f"])("img",{class:"",src:s.a,width:"40",height:"40"}),Object(o["f"])("div",{class:"col"},[Object(o["f"])("p",{class:"small"},[Object(o["f"])("strong",null,"The SyKo Network"),Object(o["f"])("br"),Object(o["e"])(" Content Creator ")])])]),Object(o["f"])("p",{class:"card-text small"}," The Ender Elevators addon adds the new Enderporter and now Omniporter blocks to your Minecraft world! ")],-1),q={class:"m-1"},K=Object(o["f"])("img",{class:"card-img-top",src:i.a,alt:""},null,-1),E=Object(o["f"])("div",{class:"card-body text-white"},[Object(o["f"])("h5",{class:"card-title text-white"},"Compressed Crafting"),Object(o["f"])("div",{class:"row"},[Object(o["f"])("img",{class:"",src:s.a,width:"40",height:"40"}),Object(o["f"])("div",{class:"col"},[Object(o["f"])("p",{class:"small"},[Object(o["f"])("strong",null,"The SyKo Network"),Object(o["f"])("br"),Object(o["e"])(" Content Creator ")])])]),Object(o["f"])("p",{class:"card-text small"}," This addon allows you to compress blocks up to EIGHT TIMES!! So if you need more room for storage, this is the addon for you!! ")],-1),M={class:"m-1"},L=Object(o["f"])("img",{class:"card-img-top",src:p.a,alt:""},null,-1),A=Object(o["f"])("div",{class:"card-body text-white"},[Object(o["f"])("h5",{class:"card-title text-white"},"Return Anchors"),Object(o["f"])("div",{class:"row"},[Object(o["f"])("img",{class:"",src:s.a,width:"40",height:"40"}),Object(o["f"])("div",{class:"col"},[Object(o["f"])("p",{class:"small"},[Object(o["f"])("strong",null,"The SyKo Network"),Object(o["f"])("br"),Object(o["e"])(" Content Creator ")])])]),Object(o["f"])("p",{class:"card-text small"}," Tired of leaving for an adventure only to have to walk all the way home! Return Anchors is a survival style home teleport system! ")],-1),B={class:"m-1"},F=Object(o["f"])("img",{class:"card-img-top",src:u.a,alt:""},null,-1),G=Object(o["f"])("div",{class:"card-body text-white"},[Object(o["f"])("h5",{class:"card-title text-white"},"Survival Miner"),Object(o["f"])("div",{class:"row"},[Object(o["f"])("img",{class:"",src:s.a,width:"40",height:"40"}),Object(o["f"])("div",{class:"col"},[Object(o["f"])("p",{class:"small"},[Object(o["f"])("strong",null,"The SyKo Network"),Object(o["f"])("br"),Object(o["e"])(" Content Creator ")])])]),Object(o["f"])("p",{class:"card-text small"}," The Survival Miner addon adds vein-mining for all ores both overworld and nether, it also adds tree-capitation for all tree types! ")],-1),P={class:"m-1"},z=Object(o["f"])("img",{class:"card-img-top",src:g.a,alt:""},null,-1),H=Object(o["f"])("div",{class:"card-body text-white"},[Object(o["f"])("h5",{class:"card-title text-white"},"Crazy Caves"),Object(o["f"])("div",{class:"row"},[Object(o["f"])("img",{class:"",src:s.a,width:"40",height:"40"}),Object(o["f"])("div",{class:"col"},[Object(o["f"])("p",{class:"small"},[Object(o["f"])("strong",null,"The SyKo Network"),Object(o["f"])("br"),Object(o["e"])(" Content Creator ")])])]),Object(o["f"])("p",{class:"card-text small"}," Based on the Minecraft 1.17 Caves & Cliffs update the Crazy Caves addon with change the way you play Minecraft!! ")],-1),R={class:"m-1"},Q=Object(o["f"])("img",{class:"card-img-top",src:j.a,alt:""},null,-1),U=Object(o["f"])("div",{class:"card-body text-white"},[Object(o["f"])("h5",{class:"card-title text-white"},"Launch Pads"),Object(o["f"])("div",{class:"row"},[Object(o["f"])("img",{class:"",src:s.a,width:"40",height:"40"}),Object(o["f"])("div",{class:"col"},[Object(o["f"])("p",{class:"small"},[Object(o["f"])("strong",null,"The SyKo Network"),Object(o["f"])("br"),Object(o["e"])(" Content Creator ")])])]),Object(o["f"])("p",{class:"card-text small"}," The Launch Pads addon adds the new Launch Pad blocks to your Minecraft world! The Launch Pad will send you soaring into the skies! ")],-1),V={class:"m-1"},W=Object(o["f"])("img",{class:"card-img-top",src:k.a,alt:""},null,-1),X=Object(o["f"])("div",{class:"card-body text-white"},[Object(o["f"])("h5",{class:"card-title text-white"},"Grave Desire"),Object(o["f"])("div",{class:"row"},[Object(o["f"])("img",{class:"",src:s.a,width:"40",height:"40"}),Object(o["f"])("div",{class:"col"},[Object(o["f"])("p",{class:"small"},[Object(o["f"])("strong",null,"The SyKo Network"),Object(o["f"])("br"),Object(o["e"])(" Content Creator ")])])]),Object(o["f"])("p",{class:"card-text small"}," The Grave Desire addon creates a gravestone when a player dies. Destroying the gravestone will return whatever items the player had! ")],-1);function Y(t,e,c,a,r,h){var s=Object(o["s"])("Navbar"),l=Object(o["s"])("router-link"),n=Object(o["s"])("Footer");return Object(o["o"])(),Object(o["c"])("div",v,[Object(o["f"])(s),Object(o["f"])("div",y,[_,x,Object(o["f"])("div",S,[Object(o["f"])("div",N,[Object(o["f"])(l,{class:"card bg-dark border-dark text-decoration-none align-items-center",style:{width:"16rem"},to:"/"},{default:Object(o["w"])((function(){return[T,C]})),_:1})]),Object(o["f"])("div",I,[Object(o["f"])(l,{class:"card bg-dark border-dark text-decoration-none align-items-center",style:{width:"16rem"},to:"/"},{default:Object(o["w"])((function(){return[D,J]})),_:1})]),Object(o["f"])("div",q,[Object(o["f"])(l,{class:"card bg-dark border-dark text-decoration-none align-items-center",style:{width:"16rem"},to:"/"},{default:Object(o["w"])((function(){return[K,E]})),_:1})]),Object(o["f"])("div",M,[Object(o["f"])(l,{class:"card bg-dark border-dark text-decoration-none align-items-center",style:{width:"16rem"},to:"/"},{default:Object(o["w"])((function(){return[L,A]})),_:1})]),Object(o["f"])("div",B,[Object(o["f"])(l,{class:"card bg-dark border-dark text-decoration-none align-items-center",style:{width:"16rem"},to:"/"},{default:Object(o["w"])((function(){return[F,G]})),_:1})]),Object(o["f"])("div",P,[Object(o["f"])(l,{class:"card bg-dark border-dark text-decoration-none align-items-center",style:{width:"16rem"},to:"/"},{default:Object(o["w"])((function(){return[z,H]})),_:1})]),Object(o["f"])("div",R,[Object(o["f"])(l,{class:"card bg-dark border-dark text-decoration-none align-items-center",style:{width:"16rem"},to:"/"},{default:Object(o["w"])((function(){return[Q,U]})),_:1})]),Object(o["f"])("div",V,[Object(o["f"])(l,{class:"card bg-dark border-dark text-decoration-none align-items-center",style:{width:"16rem"},to:"/"},{default:Object(o["w"])((function(){return[W,X]})),_:1})])])]),Object(o["f"])(n)])}var Z=c("9d8d"),$=c("076e"),tt={components:{Navbar:Z["a"],Footer:$["a"]}};tt.render=Y;e["default"]=tt},"1fbc":function(t,e,c){t.exports=c.p+"img/pack_icon.6fae198b.png"},"215e":function(t,e,c){t.exports=c.p+"img/pack_icon.6f832f87.png"},"6d69":function(t,e,c){t.exports=c.p+"img/pack_icon.1873540c.png"},c44f:function(t,e,c){t.exports=c.p+"img/pack_icon.99e7ebbd.png"},d7d2:function(t,e,c){t.exports=c.p+"img/pack_icon.6f53dffa.png"},eba1:function(t,e,c){"use strict";c.r(e);var o=c("7a23"),a=c("6a4c"),r=c.n(a),h={class:"docs"},s=Object(o["f"])("header",{class:"bg-primary text-white text-center"},[Object(o["f"])("div",{class:"container d-flex align-items-end flex-column"},[Object(o["f"])("div",{class:"row d-flex align-items-center flex-row-reverse p-4"},[Object(o["f"])("div",{class:"rounded col align-self-center"},[Object(o["f"])("img",{class:"bg-white rounded",src:r.a,alt:""})]),Object(o["f"])("div",{class:"col align-self-center text-uppercase"},[Object(o["f"])("h1",null,"Addon Documentation")])])])],-1),l={class:"bg-dark p-4"},n=Object(o["d"])('<div class="container text-light bg-secondary p-4"><h1 class="row p-4">minecraft:tree_feature</h1></div><div class="container text-light bg-secondary p-4"><table class="container table table-striped table-secondary table-bordered"><thead class="thead-dark"><tr><th scope="col" width="250rem">Name</th><th scope="col" width="50rem">Type</th><th scope="col">Description</th></tr></thead><tbody><tr><th scope="col">may_grow_on</th><th scope="col">String/JSON Object</th><th scope="col">Name of the block the tree can grow on</th></tr><tr><th scope="col">may_grow_through</th><th scope="col">String/JSON Object</th><th scope="col">Name of the block the tree can grow through</th></tr><tr><th scope="col">may_replace</th><th scope="col">String/JSON Object</th><th scope="col">Name of the block the tree can replace</th></tr></tbody></table></div><div class="container text-light bg-secondary p-4"><div><h3>acacia_trunk</h3></div><table class="container table table-striped table-secondary table-bordered"><thead class="thead-dark"><tr><th scope="col" width="250rem">Name</th><th scope="col" width="50rem">Type</th><th scope="col">Description</th></tr></thead><tbody><tr><th scope="col">trunk_height</th><th scope="col">JSON Object</th><th scope="col"> Sets the height of the trunk <table class="table table-striped table-secondary table-bordered"><thead class="thead-dark"><tr><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr></thead><tbody><tr><th scope="col">base</th><th scope="col">Integer</th><th scope="col">The base height of the Trunk</th></tr><tr><th scope="col">intervals</th><th scope="col">Array</th><th scope="col"> The amount the tree grows along the branches </th></tr></tbody></table></th></tr><tr><th scope="col">trunk_width</th><th scope="col">Integer</th><th scope="col">Sets the width of the base trunk</th></tr><tr><th scope="col">trunk_block</th><th scope="col">String/JSON Object</th><th scope="col">Name of the block to be used for the trunk</th></tr><tr><th>trunk_lean</th><th>JSON Object</th><th> Sets the height and steps of the branches coming from the main trunk <table class="table table-striped table-secondary table-bordered"><thead class="thead-dark"><tr><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr></thead><tbody><tr><th scope="col">allow_diagonal_growth</th><th scope="col">Boolean</th><th scope="col"> If true, the Trunk can grow at an angle </th></tr><tr><th scope="col">lean_height</th><th scope="col">Integer</th><th scope="col"> The amount the tree grows along the branches </th></tr><tr><th scope="col">lean_steps</th><th scope="col">Integer</th><th scope="col"> The number of steps up the trunk will take to reach the max height </th></tr></tbody></table></th></tr><tr><th scope="col" class="table-dark">branches</th></tr><tr><th scope="col">branch_length</th><th scope="col">JSON Object</th><th scope="col"> Sets the range of the branch branch_length <table class="table table-striped table-secondary table-bordered"><thead class="thead-dark"><tr><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr></thead><tbody><tr><th scope="col">range_min</th><th scope="col">Integer</th><th scope="col">The minimum value for branch length</th></tr><tr><th scope="col">range_max</th><th scope="col">Integer</th><th scope="col">The maximum value for branch length</th></tr></tbody></table></th></tr><tr><th scope="col">branch_position</th><th scope="col">JSON Object</th><th scope="col"> Sets the range of the branch position <table class="table table-striped table-secondary table-bordered"><thead class="thead-dark"><tr><th scope="col">Name</th><th scope="col">Type</th><th scope="col">Description</th></tr></thead><tbody><tr><th scope="col">range_min</th><th scope="col">Integer</th><th scope="col">The minimum value for branch length</th></tr><tr><th scope="col">range_max</th><th scope="col">Integer</th><th scope="col">The maximum value for branch length</th></tr></tbody></table></th></tr><tr><th scope="col">branch_chance</th><th scope="col">Integer</th><th scope="col"> (0 - 100) Sets the chance of Branches Generating </th></tr><tr><th scope="col">branch_canopy</th><th scope="col">JSON Object</th><th scope="col"> Takes a Canopy object to generate on the ends of the branches </th></tr></tbody></table></div><div class="container text-light bg-secondary p-4"><div><h3>fallen_trunk</h3></div><table class="container table table-striped table-secondary table-bordered"><thead class="thead-dark"><tr><th scope="col" width="250rem">Name</th><th scope="col" width="50rem">Type</th><th scope="col">Description</th></tr></thead><tr><th scope="col">stump_height</th><th scope="col">Boolean</th><th scope="col">Sets the height of the stump block</th></tr><tr><th scope="col">height_modifier</th><th scope="col">Integer</th><th scope="col">Sets the height varience of the stump block</th></tr><tr><th scope="col">log_length</th><th scope="col">Integer</th><th scope="col">Sets the length of the fallen trunk</th></tr><tr><th scope="col">trunk_block</th><th scope="col">String/JSON Object</th><th scope="col">Name of the block to be used for the trunk</th></tr><tr><th scope="col">log_decoration_feature</th><th scope="col">String/JSON Object</th><th scope="col"> Name of the block to be used for the log decoration </th></tr><tr><th scope="col">trunk_decoration</th><th scope="col">JSON Object</th><th scope="col"><table class="container table table-striped table-secondary table-bordered"><thead class="thead-dark"><tr><th scope="col" width="250rem">Name</th><th scope="col" width="50rem">Type</th><th scope="col">Description</th></tr></thead><tr><th scope="col">decoration_chance</th><th scope="col">JSON Object</th><th scope="col"><table class="container table table-striped table-secondary table-bordered"><thead class="thead-dark"><tr><th scope="col" width="250rem">Name</th><th scope="col" width="50rem">Type</th></tr></thead><tr><th scope="col">numerator</th><th scope="col">Integer</th></tr><tr><th scope="col">denominator</th><th scope="col">Integer</th></tr></table></th></tr><tr><th scope="col">num_steps</th><th scope="col">Integer</th><th scope="col"> The number of steps the decoratione gets placed </th></tr><tr><th scope="col">step_direction</th><th scope="col">String</th><th scope="col">&quot;down&quot;, &quot;up&quot;, &quot;out&quot;, &quot;away&quot;</th></tr><tr><th scope="col">decoration_block</th><th scope="col">JSON Object</th><th scope="col"> Name of the block to be used for the trunk decoration </th></tr></table></th></tr></table></div><div class="container text-light bg-secondary p-4"><div><h3>fancy_trunk</h3></div><table class="container table table-striped table-secondary table-bordered"><thead class="thead-dark"><tr><th scope="col" width="250rem">Name</th><th scope="col" width="50rem">Type</th><th scope="col">Description</th></tr></thead><tr><th scope="col">trunk_height</th><th scope="col">Integer</th><th scope="col"><table class="container table table-striped table-secondary table-bordered"><thead class="thead-dark"><tr><th scope="col" width="250rem">Name</th><th scope="col" width="50rem">Type</th><th scope="col">Description</th></tr></thead><tr><th scope="col">base</th><th scope="col">Integer</th><th scope="col">Sets the base trunk height</th></tr><tr><th scope="col">varience</th><th scope="col">Integer</th><th scope="col">Sets the varience of the trunk height</th></tr><tr><th scope="col">scale</th><th scope="col">Decimal</th><th scope="col"> Sets the scale of the trunk height to increase based on varience </th></tr></table></th></tr><tr><th scope="col">trunk_width</th><th scope="col">Integer</th><th scope="col">Sets the width of the trunk</th></tr><tr><th scope="col">width_scale</th><th scope="col">Decimal</th><th scope="col">Sets the varience of the trunk width</th></tr><tr><th scope="col">foliage_altitude_factor</th><th scope="col">Decimal</th><th scope="col">Sets the hight at which leaves can generate</th></tr><tr><th scope="col">trunk_block</th><th scope="col">String/JSON Object</th><th scope="col">Name of the block to be used for the trunk</th></tr><tr><th scope="col" class="table-dark">branches</th></tr><tr><th scope="col">slope</th><th scope="col">Decimal</th><th scope="col">(-1 - 1) Sets the slope height for branches</th></tr><tr><th scope="col">density</th><th scope="col">Decimal</th><th scope="col">The maximum value for branch length</th></tr><tr><th scope="col">min_altitude_factor</th><th scope="col">Decimal</th><th scope="col">The min height scale for branch placement</th></tr></table></div><div class="container text-light bg-secondary p-4"><div><h3>trunk</h3></div><table class="container table table-striped table-secondary table-bordered"><thead class="thead-dark"><tr><th scope="col" width="250rem">Name</th><th scope="col" width="50rem">Type</th><th scope="col">Description</th></tr></thead><tr><th scope="col">can_be_submerged</th><th scope="col">Boolean</th><th scope="col"> Sets wether the trunk will generate under the surface </th></tr><tr><th scope="col">trunk_height</th><th scope="col">Integer</th><th scope="col">Sets the trunk height</th></tr><tr><th scope="col">trunk_block</th><th scope="col">String/JSON Object</th><th scope="col">Name of the block to be used for the trunk</th></tr><tr><th scope="col">trunk_decoration</th><th scope="col">JSON Object</th><th scope="col"><table class="container table table-striped table-secondary table-bordered"><thead class="thead-dark"><tr><th scope="col" width="250rem">Name</th><th scope="col" width="50rem">Type</th><th scope="col">Description</th></tr></thead><tr><th scope="col">decoration_chance</th><th scope="col">JSON Object</th><th scope="col"><table class="container table table-striped table-secondary table-bordered"><thead class="thead-dark"><tr><th scope="col" width="250rem">Name</th><th scope="col" width="50rem">Type</th></tr></thead><tr><th scope="col">numerator</th><th scope="col">Integer</th></tr><tr><th scope="col">denominator</th><th scope="col">Integer</th></tr></table></th></tr><tr><th scope="col">num_steps</th><th scope="col">Integer</th><th scope="col"> The number of steps the decoratione gets placed </th></tr><tr><th scope="col">step_direction</th><th scope="col">String</th><th scope="col">&quot;down&quot;, &quot;up&quot;, &quot;out&quot;, &quot;away&quot;</th></tr><tr><th scope="col">decoration_block</th><th scope="col">JSON Object</th><th scope="col"> Name of the block to be used for the trunk decoration </th></tr></table></th></tr></table></div>',6);function d(t,e,c,a,r,d){var i=Object(o["s"])("Navbar"),b=Object(o["s"])("Adsense"),p=Object(o["s"])("Footer");return Object(o["o"])(),Object(o["c"])("div",h,[Object(o["f"])(i),s,Object(o["f"])("div",l,[n,Object(o["f"])(b,{style:{display:"block"},"data-ad-client":"ca-pub-0477942223783479","data-ad-slot":"5502981571","data-ad-format":"auto","data-full-width-responsive":"true"})]),Object(o["f"])(p)])}var i=c("9d8d"),b=c("076e"),p={components:{Navbar:i["a"],Footer:b["a"]}};p.render=d;e["default"]=p}}]);
//# sourceMappingURL=about.7397a549.js.map